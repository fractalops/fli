name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.24.4'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.22, 1.23, 1.24]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: CGO_ENABLED=1 go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: v2.2.1

    - name: Run golangci-lint
      run: golangci-lint run

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest

    - name: Run security audit
      run: govulncheck ./...

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]

    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            target: linux-amd64
          - os: linux
            arch: arm64
            target: linux-arm64
          - os: darwin
            arch: amd64
            target: darwin-amd64
          - os: darwin
            arch: arm64
            target: darwin-arm64
          - os: windows
            arch: amd64
            target: windows-amd64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Get version info
      id: version
      run: |
        VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")
        BUILD_TIME=$(date -u '+%Y-%m-%d_%H:%M:%S')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT

    - name: Build binary
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build \
          -ldflags="-s -w -X main.version=${{ steps.version.outputs.version }} -X main.buildTime=${{ steps.version.outputs.build_time }}" \
          -o fli-${{ matrix.target }} ./cmd/fli

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fli-${{ matrix.target }}
        path: fli-${{ matrix.target }} 